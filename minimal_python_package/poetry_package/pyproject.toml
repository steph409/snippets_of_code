# Instead of calling 'python setup.py sdist bdist_wheel' where we need to have every library that setup.py uses (incl.
# setuptools itself) installed prior, we will work with pyproject.toml.
# Detailed explanation to be found here: https://www.kimsereylam.com/python/2021/03/26/pyproject-toml.html
#
# Read PEP 517, PEP 518, PEP 621, PEP 660 for more information about how and why to use pyproject.toml
#
# Is setup.cfg deprecated? - https://stackoverflow.com/questions/44878600/is-setup-cfg-deprecated
# No, according to https://github.com/pypa/setuptools/issues/1160 setup.cfg will not be deprecated.
# More information: https://github.com/pypa/setuptools/issues/1688.
# However, pyproject.toml can be used as a single source of truth:
# PEP 518 defines pyproject.toml as a configuration file to store build system requirements for Python projects.
# With the help of tools like Poetry or Flit it can fully replace the need for setup.py and setup.cfg files.
#
# Instructions for setting up a minimally working pyproject.toml:
#
# https://stackoverflow.com/questions/64150719/how-to-write-a-minimally-working-pyproject-toml-file-that-can-install-packages

# Build-system: Setuptools
#
# [build-system]
# requires = ["setuptools", "wheel"]
# build-backend = "setuptools.build_meta"
#
# -----------------------------------------------------------------

[tool.poetry]
# Documentation: https://python-poetry.org/docs/pyproject/
name = 'dummy package'
version = "0.0.2"
authors = [
    "Stephanie Lanius <stephanie.lanius@XXX>"
]
description = "Python package which works pretty well."
classifiers = [
    "Topic :: Development Status :: 1 - Planning",
    "Topic :: Intended Audience :: Developers",
    "Topic :: Programming Language :: Python :: 3.7"
]
readme = 'README.md'
documentation = "PLACEHOLDER FOR ACTUAL DOCS URL"
repository = "URL to Gitlab Repo"
homepage = "URL to homepage where we present the package"
keywords = [
    "python",
    "cool",
    "poetry"
]


# Build-system: Poetry


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.8"

# Optional dependencies. Can be bundled under [tool.poetry.extras] .
Sphinx = {version = "^4.4.0", optional = true}
sphinx-rtd-theme = {version = "^1.0.0", optional = true}
sphinx-autobuild = {version = "^2021.3.14", optional = true}
myst-parser = {version = "^0.17.0", optional = true}

[tool.poetry.dev-dependencies]
pytest = "^3.4"
coverage = "^6.3.1"
black = "^22.1.0"

[tool.poetry.extras]
docs = [
    "Sphinx",
    "sphinx-rtd-theme",
    "sphinx-autobuild",
    "myst-parser"
]

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''